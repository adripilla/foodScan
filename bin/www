#!/usr/bin/env node

const app = require("../app");
const debug = require("debug")("foodscan:server");
const http = require("http");
const { loadModel } = require("../services/imageService");

const port = normalizePort(process.env.PORT || "5000");
app.set("port", port);

// Cargar MobileNet antes de levantar el servidor
loadModel()
  .then(() => {
    console.log("✅ Modelo MobileNet cargado");
    const server = http.createServer(app);

    server.listen(port);
    server.on("error", onError);
    server.on("listening", onListening);
  })
  .catch((error) => {
    console.error("❌ Error al cargar el modelo MobileNet:", error);
    process.exit(1); // detener ejecución si no se puede cargar el modelo
  });

function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

function onError(error) {
  if (error.syscall !== "listen") throw error;
  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  switch (error.code) {
    case "EACCES":
      console.error(bind + " requiere privilegios elevados");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " ya está en uso");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const addr = this.address();
  const bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
  console.log(`🚀 Servidor corriendo en http://localhost:${port}`);
}
